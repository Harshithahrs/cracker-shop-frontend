# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript
trigger:
  branches:
    include:
      - BTCS1_Login_Signup

pool:
   vmImage: 'windows-latest'  # Use a Windows agent pool


steps:
- task: NodeTool@0
  inputs:
    versionSpec: '18.x'
  displayName: 'Install Node.js'

- script: |
    npm install -g @angular/cli
    npm install
    ng build --configuration=production --output-path=$(Build.ArtifactStagingDirectory)/dist/cracker-frontend-app1
  displayName: 'Install Angular CLI and Build'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)/angular-artifact.zip'  # Path to the artifact to publish
    artifactName: 'angular-artifact'  # Name of the artifact to publish
    publishLocation: 'Container'  # Publish to Azure Pipelines artifact repository
  displayName: 'Publish Angular Build Artifacts'
- task: AzureRmWebAppDeployment@4
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: 'Azure for Students (6ebbb3bc-8b53-4226-bb05-d7851352144a)'
    appType: 'webApp'
    WebAppName: 'DEV-D'
    deployToSlotOrASE: true
    ResourceGroupName: 'cracker-admin-dashboard'
    SlotName: 'production'
    packageForLinux: '$(Build.ArtifactStagingDirectory)/angular-dist'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'Azure for Students (6ebbb3bc-8b53-4226-bb05-d7851352144a)'
    scriptType: 'bash'
    scriptLocation: 'inlineScript'
    inlineScript: |
      az webapp create --name mywebappservice --resource-group cracker-admin-dashboard --plan myappserviceplan --runtime "node|18-lts"
  displayName: 'Create Azure Web App Service'
